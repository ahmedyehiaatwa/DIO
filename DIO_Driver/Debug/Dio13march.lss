
Dio13march.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000396  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000003ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003ea  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000041c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000458  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c34  00000000  00000000  00000538  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007db  00000000  00000000  0000116c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000657  00000000  00000000  00001947  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000160  00000000  00000000  00001fa0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000435  00000000  00000000  00002100  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004a7  00000000  00000000  00002535  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  000029dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 b1 01 	call	0x362	; 0x362 <main>
  64:	0c 94 c9 01 	jmp	0x392	; 0x392 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <Button0_Init>:
#include "STD.h"


void Button0_Init(void)
{
	DIO_SetPinDir(DIO_PORTB, DIO_PIN0 , DIO_PIN_INPUT);
  6c:	40 e0       	ldi	r20, 0x00	; 0
  6e:	60 e0       	ldi	r22, 0x00	; 0
  70:	81 e0       	ldi	r24, 0x01	; 1
  72:	0e 94 56 00 	call	0xac	; 0xac <DIO_SetPinDir>
  76:	08 95       	ret

00000078 <Button0_GetValue>:
}
uint8_t Button0_GetValue(void)
{
  78:	cf 93       	push	r28
  7a:	df 93       	push	r29
  7c:	1f 92       	push	r1
  7e:	cd b7       	in	r28, 0x3d	; 61
  80:	de b7       	in	r29, 0x3e	; 62
	uint8_t value = 0;
  82:	19 82       	std	Y+1, r1	; 0x01
	
	DIO_ReadPinValue(DIO_PORTB, DIO_PIN0, &value);
  84:	ae 01       	movw	r20, r28
  86:	4f 5f       	subi	r20, 0xFF	; 255
  88:	5f 4f       	sbci	r21, 0xFF	; 255
  8a:	60 e0       	ldi	r22, 0x00	; 0
  8c:	81 e0       	ldi	r24, 0x01	; 1
  8e:	0e 94 38 01 	call	0x270	; 0x270 <DIO_ReadPinValue>
	
	while(GET_BIT(PINB, 0)==1);
  92:	b0 99       	sbic	0x16, 0	; 22
  94:	fe cf       	rjmp	.-4      	; 0x92 <Button0_GetValue+0x1a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  96:	8f e3       	ldi	r24, 0x3F	; 63
  98:	9c e9       	ldi	r25, 0x9C	; 156
  9a:	01 97       	sbiw	r24, 0x01	; 1
  9c:	f1 f7       	brne	.-4      	; 0x9a <Button0_GetValue+0x22>
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <Button0_GetValue+0x28>
  a0:	00 00       	nop
	
	_delay_ms(10);
	
	return value;
	
  a2:	89 81       	ldd	r24, Y+1	; 0x01
  a4:	0f 90       	pop	r0
  a6:	df 91       	pop	r29
  a8:	cf 91       	pop	r28
  aa:	08 95       	ret

000000ac <DIO_SetPinDir>:
		case DIO_PORTC :
		PORTC ^= 0xff;
		break;
		
		case DIO_PORTD :
		PORTD ^= 0xff;
  ac:	44 23       	and	r20, r20
  ae:	b9 f1       	breq	.+110    	; 0x11e <DIO_SetPinDir+0x72>
  b0:	41 30       	cpi	r20, 0x01	; 1
  b2:	09 f0       	breq	.+2      	; 0xb6 <DIO_SetPinDir+0xa>
  b4:	6b c0       	rjmp	.+214    	; 0x18c <DIO_SetPinDir+0xe0>
  b6:	81 30       	cpi	r24, 0x01	; 1
  b8:	89 f0       	breq	.+34     	; 0xdc <DIO_SetPinDir+0x30>
  ba:	28 f0       	brcs	.+10     	; 0xc6 <DIO_SetPinDir+0x1a>
  bc:	82 30       	cpi	r24, 0x02	; 2
  be:	c9 f0       	breq	.+50     	; 0xf2 <DIO_SetPinDir+0x46>
  c0:	83 30       	cpi	r24, 0x03	; 3
  c2:	11 f1       	breq	.+68     	; 0x108 <DIO_SetPinDir+0x5c>
  c4:	08 95       	ret
  c6:	2a b3       	in	r18, 0x1a	; 26
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <DIO_SetPinDir+0x26>
  ce:	88 0f       	add	r24, r24
  d0:	99 1f       	adc	r25, r25
  d2:	6a 95       	dec	r22
  d4:	e2 f7       	brpl	.-8      	; 0xce <DIO_SetPinDir+0x22>
  d6:	82 2b       	or	r24, r18
  d8:	8a bb       	out	0x1a, r24	; 26
  da:	08 95       	ret
  dc:	27 b3       	in	r18, 0x17	; 23
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <DIO_SetPinDir+0x3c>
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	6a 95       	dec	r22
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <DIO_SetPinDir+0x38>
  ec:	82 2b       	or	r24, r18
  ee:	87 bb       	out	0x17, r24	; 23
  f0:	08 95       	ret
  f2:	24 b3       	in	r18, 0x14	; 20
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	02 c0       	rjmp	.+4      	; 0xfe <DIO_SetPinDir+0x52>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	6a 95       	dec	r22
 100:	e2 f7       	brpl	.-8      	; 0xfa <DIO_SetPinDir+0x4e>
 102:	82 2b       	or	r24, r18
 104:	84 bb       	out	0x14, r24	; 20
 106:	08 95       	ret
 108:	21 b3       	in	r18, 0x11	; 17
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	02 c0       	rjmp	.+4      	; 0x114 <DIO_SetPinDir+0x68>
 110:	88 0f       	add	r24, r24
 112:	99 1f       	adc	r25, r25
 114:	6a 95       	dec	r22
 116:	e2 f7       	brpl	.-8      	; 0x110 <DIO_SetPinDir+0x64>
 118:	82 2b       	or	r24, r18
 11a:	81 bb       	out	0x11, r24	; 17
 11c:	08 95       	ret
 11e:	81 30       	cpi	r24, 0x01	; 1
 120:	91 f0       	breq	.+36     	; 0x146 <DIO_SetPinDir+0x9a>
 122:	28 f0       	brcs	.+10     	; 0x12e <DIO_SetPinDir+0x82>
 124:	82 30       	cpi	r24, 0x02	; 2
 126:	d9 f0       	breq	.+54     	; 0x15e <DIO_SetPinDir+0xb2>
 128:	83 30       	cpi	r24, 0x03	; 3
 12a:	29 f1       	breq	.+74     	; 0x176 <DIO_SetPinDir+0xca>
 12c:	08 95       	ret
 12e:	2a b3       	in	r18, 0x1a	; 26
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_SetPinDir+0x8e>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_SetPinDir+0x8a>
 13e:	80 95       	com	r24
 140:	82 23       	and	r24, r18
 142:	8a bb       	out	0x1a, r24	; 26
 144:	08 95       	ret
 146:	27 b3       	in	r18, 0x17	; 23
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_SetPinDir+0xa6>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_SetPinDir+0xa2>
 156:	80 95       	com	r24
 158:	82 23       	and	r24, r18
 15a:	87 bb       	out	0x17, r24	; 23
 15c:	08 95       	ret
 15e:	24 b3       	in	r18, 0x14	; 20
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	02 c0       	rjmp	.+4      	; 0x16a <DIO_SetPinDir+0xbe>
 166:	88 0f       	add	r24, r24
 168:	99 1f       	adc	r25, r25
 16a:	6a 95       	dec	r22
 16c:	e2 f7       	brpl	.-8      	; 0x166 <DIO_SetPinDir+0xba>
 16e:	80 95       	com	r24
 170:	82 23       	and	r24, r18
 172:	84 bb       	out	0x14, r24	; 20
 174:	08 95       	ret
 176:	21 b3       	in	r18, 0x11	; 17
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	02 c0       	rjmp	.+4      	; 0x182 <DIO_SetPinDir+0xd6>
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	6a 95       	dec	r22
 184:	e2 f7       	brpl	.-8      	; 0x17e <DIO_SetPinDir+0xd2>
 186:	80 95       	com	r24
 188:	82 23       	and	r24, r18
 18a:	81 bb       	out	0x11, r24	; 17
 18c:	08 95       	ret

0000018e <DIO_SetPinValue>:
 18e:	44 23       	and	r20, r20
 190:	b9 f1       	breq	.+110    	; 0x200 <DIO_SetPinValue+0x72>
 192:	41 30       	cpi	r20, 0x01	; 1
 194:	09 f0       	breq	.+2      	; 0x198 <DIO_SetPinValue+0xa>
 196:	6b c0       	rjmp	.+214    	; 0x26e <DIO_SetPinValue+0xe0>
 198:	81 30       	cpi	r24, 0x01	; 1
 19a:	89 f0       	breq	.+34     	; 0x1be <DIO_SetPinValue+0x30>
 19c:	28 f0       	brcs	.+10     	; 0x1a8 <DIO_SetPinValue+0x1a>
 19e:	82 30       	cpi	r24, 0x02	; 2
 1a0:	c9 f0       	breq	.+50     	; 0x1d4 <DIO_SetPinValue+0x46>
 1a2:	83 30       	cpi	r24, 0x03	; 3
 1a4:	11 f1       	breq	.+68     	; 0x1ea <DIO_SetPinValue+0x5c>
 1a6:	08 95       	ret
 1a8:	2b b3       	in	r18, 0x1b	; 27
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_SetPinValue+0x26>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	6a 95       	dec	r22
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_SetPinValue+0x22>
 1b8:	82 2b       	or	r24, r18
 1ba:	8b bb       	out	0x1b, r24	; 27
 1bc:	08 95       	ret
 1be:	28 b3       	in	r18, 0x18	; 24
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	02 c0       	rjmp	.+4      	; 0x1ca <DIO_SetPinValue+0x3c>
 1c6:	88 0f       	add	r24, r24
 1c8:	99 1f       	adc	r25, r25
 1ca:	6a 95       	dec	r22
 1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <DIO_SetPinValue+0x38>
 1ce:	82 2b       	or	r24, r18
 1d0:	88 bb       	out	0x18, r24	; 24
 1d2:	08 95       	ret
 1d4:	25 b3       	in	r18, 0x15	; 21
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <DIO_SetPinValue+0x52>
 1dc:	88 0f       	add	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	6a 95       	dec	r22
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <DIO_SetPinValue+0x4e>
 1e4:	82 2b       	or	r24, r18
 1e6:	85 bb       	out	0x15, r24	; 21
 1e8:	08 95       	ret
 1ea:	22 b3       	in	r18, 0x12	; 18
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <DIO_SetPinValue+0x68>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	6a 95       	dec	r22
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <DIO_SetPinValue+0x64>
 1fa:	82 2b       	or	r24, r18
 1fc:	82 bb       	out	0x12, r24	; 18
 1fe:	08 95       	ret
 200:	81 30       	cpi	r24, 0x01	; 1
 202:	91 f0       	breq	.+36     	; 0x228 <DIO_SetPinValue+0x9a>
 204:	28 f0       	brcs	.+10     	; 0x210 <DIO_SetPinValue+0x82>
 206:	82 30       	cpi	r24, 0x02	; 2
 208:	d9 f0       	breq	.+54     	; 0x240 <DIO_SetPinValue+0xb2>
 20a:	83 30       	cpi	r24, 0x03	; 3
 20c:	29 f1       	breq	.+74     	; 0x258 <DIO_SetPinValue+0xca>
 20e:	08 95       	ret
 210:	2b b3       	in	r18, 0x1b	; 27
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <DIO_SetPinValue+0x8e>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <DIO_SetPinValue+0x8a>
 220:	80 95       	com	r24
 222:	82 23       	and	r24, r18
 224:	8b bb       	out	0x1b, r24	; 27
 226:	08 95       	ret
 228:	28 b3       	in	r18, 0x18	; 24
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 c0       	rjmp	.+4      	; 0x234 <DIO_SetPinValue+0xa6>
 230:	88 0f       	add	r24, r24
 232:	99 1f       	adc	r25, r25
 234:	6a 95       	dec	r22
 236:	e2 f7       	brpl	.-8      	; 0x230 <DIO_SetPinValue+0xa2>
 238:	80 95       	com	r24
 23a:	82 23       	and	r24, r18
 23c:	88 bb       	out	0x18, r24	; 24
 23e:	08 95       	ret
 240:	25 b3       	in	r18, 0x15	; 21
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	02 c0       	rjmp	.+4      	; 0x24c <DIO_SetPinValue+0xbe>
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	6a 95       	dec	r22
 24e:	e2 f7       	brpl	.-8      	; 0x248 <DIO_SetPinValue+0xba>
 250:	80 95       	com	r24
 252:	82 23       	and	r24, r18
 254:	85 bb       	out	0x15, r24	; 21
 256:	08 95       	ret
 258:	22 b3       	in	r18, 0x12	; 18
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	02 c0       	rjmp	.+4      	; 0x264 <DIO_SetPinValue+0xd6>
 260:	88 0f       	add	r24, r24
 262:	99 1f       	adc	r25, r25
 264:	6a 95       	dec	r22
 266:	e2 f7       	brpl	.-8      	; 0x260 <DIO_SetPinValue+0xd2>
 268:	80 95       	com	r24
 26a:	82 23       	and	r24, r18
 26c:	82 bb       	out	0x12, r24	; 18
 26e:	08 95       	ret

00000270 <DIO_ReadPinValue>:
 270:	81 30       	cpi	r24, 0x01	; 1
 272:	89 f0       	breq	.+34     	; 0x296 <DIO_ReadPinValue+0x26>
 274:	28 f0       	brcs	.+10     	; 0x280 <DIO_ReadPinValue+0x10>
 276:	82 30       	cpi	r24, 0x02	; 2
 278:	c9 f0       	breq	.+50     	; 0x2ac <DIO_ReadPinValue+0x3c>
 27a:	83 30       	cpi	r24, 0x03	; 3
 27c:	11 f1       	breq	.+68     	; 0x2c2 <DIO_ReadPinValue+0x52>
 27e:	08 95       	ret
 280:	89 b3       	in	r24, 0x19	; 25
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	02 c0       	rjmp	.+4      	; 0x28a <DIO_ReadPinValue+0x1a>
 286:	95 95       	asr	r25
 288:	87 95       	ror	r24
 28a:	6a 95       	dec	r22
 28c:	e2 f7       	brpl	.-8      	; 0x286 <DIO_ReadPinValue+0x16>
 28e:	81 70       	andi	r24, 0x01	; 1
 290:	fa 01       	movw	r30, r20
 292:	80 83       	st	Z, r24
 294:	08 95       	ret
 296:	86 b3       	in	r24, 0x16	; 22
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	02 c0       	rjmp	.+4      	; 0x2a0 <DIO_ReadPinValue+0x30>
 29c:	95 95       	asr	r25
 29e:	87 95       	ror	r24
 2a0:	6a 95       	dec	r22
 2a2:	e2 f7       	brpl	.-8      	; 0x29c <DIO_ReadPinValue+0x2c>
 2a4:	81 70       	andi	r24, 0x01	; 1
 2a6:	fa 01       	movw	r30, r20
 2a8:	80 83       	st	Z, r24
 2aa:	08 95       	ret
 2ac:	83 b3       	in	r24, 0x13	; 19
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <DIO_ReadPinValue+0x46>
 2b2:	95 95       	asr	r25
 2b4:	87 95       	ror	r24
 2b6:	6a 95       	dec	r22
 2b8:	e2 f7       	brpl	.-8      	; 0x2b2 <DIO_ReadPinValue+0x42>
 2ba:	81 70       	andi	r24, 0x01	; 1
 2bc:	fa 01       	movw	r30, r20
 2be:	80 83       	st	Z, r24
 2c0:	08 95       	ret
 2c2:	80 b3       	in	r24, 0x10	; 16
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <DIO_ReadPinValue+0x5c>
 2c8:	95 95       	asr	r25
 2ca:	87 95       	ror	r24
 2cc:	6a 95       	dec	r22
 2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <DIO_ReadPinValue+0x58>
 2d0:	81 70       	andi	r24, 0x01	; 1
 2d2:	fa 01       	movw	r30, r20
 2d4:	80 83       	st	Z, r24
 2d6:	08 95       	ret

000002d8 <DIO_TogglePin>:
}


void DIO_TogglePin(uint8_t Port, uint8_t Pin)
{
	switch (Port)
 2d8:	81 30       	cpi	r24, 0x01	; 1
 2da:	89 f0       	breq	.+34     	; 0x2fe <DIO_TogglePin+0x26>
 2dc:	28 f0       	brcs	.+10     	; 0x2e8 <DIO_TogglePin+0x10>
 2de:	82 30       	cpi	r24, 0x02	; 2
 2e0:	c9 f0       	breq	.+50     	; 0x314 <DIO_TogglePin+0x3c>
 2e2:	83 30       	cpi	r24, 0x03	; 3
 2e4:	11 f1       	breq	.+68     	; 0x32a <DIO_TogglePin+0x52>
 2e6:	08 95       	ret
	{
		case DIO_PORTA:
		Toggle_BIT(PORTA, Pin);
 2e8:	2b b3       	in	r18, 0x1b	; 27
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <DIO_TogglePin+0x1c>
 2f0:	88 0f       	add	r24, r24
 2f2:	99 1f       	adc	r25, r25
 2f4:	6a 95       	dec	r22
 2f6:	e2 f7       	brpl	.-8      	; 0x2f0 <DIO_TogglePin+0x18>
 2f8:	82 27       	eor	r24, r18
 2fa:	8b bb       	out	0x1b, r24	; 27
		break;
 2fc:	08 95       	ret
		
		case DIO_PORTB:
		Toggle_BIT(PORTB, Pin);
 2fe:	28 b3       	in	r18, 0x18	; 24
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	02 c0       	rjmp	.+4      	; 0x30a <DIO_TogglePin+0x32>
 306:	88 0f       	add	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	6a 95       	dec	r22
 30c:	e2 f7       	brpl	.-8      	; 0x306 <DIO_TogglePin+0x2e>
 30e:	82 27       	eor	r24, r18
 310:	88 bb       	out	0x18, r24	; 24
		break;
 312:	08 95       	ret
		
		case DIO_PORTC:
		Toggle_BIT(PORTC, Pin);
 314:	25 b3       	in	r18, 0x15	; 21
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	02 c0       	rjmp	.+4      	; 0x320 <DIO_TogglePin+0x48>
 31c:	88 0f       	add	r24, r24
 31e:	99 1f       	adc	r25, r25
 320:	6a 95       	dec	r22
 322:	e2 f7       	brpl	.-8      	; 0x31c <DIO_TogglePin+0x44>
 324:	82 27       	eor	r24, r18
 326:	85 bb       	out	0x15, r24	; 21
		break;
 328:	08 95       	ret
		
		case DIO_PORTD:
		Toggle_BIT(PORTD, Pin);
 32a:	22 b3       	in	r18, 0x12	; 18
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	02 c0       	rjmp	.+4      	; 0x336 <DIO_TogglePin+0x5e>
 332:	88 0f       	add	r24, r24
 334:	99 1f       	adc	r25, r25
 336:	6a 95       	dec	r22
 338:	e2 f7       	brpl	.-8      	; 0x332 <DIO_TogglePin+0x5a>
 33a:	82 27       	eor	r24, r18
 33c:	82 bb       	out	0x12, r24	; 18
 33e:	08 95       	ret

00000340 <LED0_Init>:
{
	DIO_SetPinValue(DIO_PORTC, DIO_PIN2 , DIO_PIN_HIGH);
}
void LED0_Off(void)
{
	DIO_SetPinValue(DIO_PORTC, DIO_PIN2 , DIO_PIN_LOW);
 340:	41 e0       	ldi	r20, 0x01	; 1
 342:	62 e0       	ldi	r22, 0x02	; 2
 344:	82 e0       	ldi	r24, 0x02	; 2
 346:	0e 94 56 00 	call	0xac	; 0xac <DIO_SetPinDir>
 34a:	08 95       	ret

0000034c <LED0_On>:
 34c:	41 e0       	ldi	r20, 0x01	; 1
 34e:	62 e0       	ldi	r22, 0x02	; 2
 350:	82 e0       	ldi	r24, 0x02	; 2
 352:	0e 94 c7 00 	call	0x18e	; 0x18e <DIO_SetPinValue>
 356:	08 95       	ret

00000358 <LED0_Toggle>:
}
void LED0_Toggle(void)
{
	DIO_TogglePin(DIO_PORTC, DIO_PIN2);
 358:	62 e0       	ldi	r22, 0x02	; 2
 35a:	82 e0       	ldi	r24, 0x02	; 2
 35c:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <DIO_TogglePin>
 360:	08 95       	ret

00000362 <main>:

int main(void)
{
	uint8_t val;
	
	LED0_Init();	
 362:	0e 94 a0 01 	call	0x340	; 0x340 <LED0_Init>
	LED0_On();
 366:	0e 94 a6 01 	call	0x34c	; 0x34c <LED0_On>
	
	Button0_Init();
 36a:	0e 94 36 00 	call	0x6c	; 0x6c <Button0_Init>
	

		
    while (1) 
    {
		val = Button0_GetValue();
 36e:	0e 94 3c 00 	call	0x78	; 0x78 <Button0_GetValue>
		
		if (val==1)
 372:	81 30       	cpi	r24, 0x01	; 1
 374:	e1 f7       	brne	.-8      	; 0x36e <main+0xc>
		{
			LED0_Toggle();
 376:	0e 94 ac 01 	call	0x358	; 0x358 <LED0_Toggle>
 37a:	2f ef       	ldi	r18, 0xFF	; 255
 37c:	89 e6       	ldi	r24, 0x69	; 105
 37e:	98 e1       	ldi	r25, 0x18	; 24
 380:	21 50       	subi	r18, 0x01	; 1
 382:	80 40       	sbci	r24, 0x00	; 0
 384:	90 40       	sbci	r25, 0x00	; 0
 386:	e1 f7       	brne	.-8      	; 0x380 <main+0x1e>
 388:	00 c0       	rjmp	.+0      	; 0x38a <main+0x28>
 38a:	00 00       	nop
			_delay_ms(500);
			LED0_Toggle();
 38c:	0e 94 ac 01 	call	0x358	; 0x358 <LED0_Toggle>
 390:	ee cf       	rjmp	.-36     	; 0x36e <main+0xc>

00000392 <_exit>:
 392:	f8 94       	cli

00000394 <__stop_program>:
 394:	ff cf       	rjmp	.-2      	; 0x394 <__stop_program>
